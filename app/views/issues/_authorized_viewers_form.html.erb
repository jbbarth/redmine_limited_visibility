<% if @issue.project.module_enabled?("limited_visibility")

     config_functions = ProjectFunctionTracker.joins(:project_function).includes(:project_function).where("project_id = ? AND tracker_id = ?", @issue.project_id, @issue.tracker_id)
     hidden_functions = config_functions.reject { |f| f.visible == true }.map { |c| c.function } if config_functions.present?

     # Default viewers based on context
     if @issue.new_record? && Redmine::Plugin.installed?(:redmine_templates) && @issue.issue_template.present? && @issue.issue_template.authorized_viewer_ids.present?
       issue_template_project_config = @issue.project.issue_template_projects.where(issue_template: @issue.issue_template).first
       visibility_ids = issue_template_project_config.visibility&.split('|')&.map(&:to_i)
       if issue_template_project_config.present? && visibility_ids.present?
         viewers = visibility_ids
       else
         viewers = @issue.issue_template.authorized_viewer_ids
       end
     else
       if @issue.project.autochecked_functions_mode == '2'
         viewers = function_ids_for_current_tracker(@issue, @previous_tracker_id)
       else
         #autocheck based on current user functions per default
         viewers = function_ids_for_current_viewers(@issue)
       end
     end
%>

  <% if User.current.admin? || User.current.allowed_to?(:change_issues_visibility, @project) %>
    <%= render "functions/select_involved_roles", viewers: viewers, current_user_visibility_roles: functional_roles_for_current_user(@issue.project), hidden_functions: hidden_functions %>
  <% end %>

  <%= hidden_field_tag "issue[authorized_viewers]", "|#{viewers.join("|")}|", :id => "authorized_viewers" %>

  <%= hidden_field_tag 'previous_tracker_id', @issue.tracker.id %>

  <% if Setting['plugin_redmine_limited_visibility']['must_have_at_least_one_visible_function'] == 'true' %>
    <script>
        $(function () {
            $('#issue-form').submit(function (e) {
                e.preventDefault();
                var form = this;
                if ($('.role.involved').not('.disabled').not('.hidden_function').length == 0) {
                    alert('<%= l('alert_cant_remove_all_visibility_roles') %>');
                    return false;
                } else {
                    form.submit(); // submit bypassing the jQuery bound event
                }
            });
        })
    </script>
  <% end %>

<% end %>
